#!/usr/bin/env ruby

##
# Shape of Metlink API as of 2020-07-29
#
# GET https://www.metlink.org.nz/api/v1/StopDepartures/STOP_NUMBER/NUM_RESULTS_YOU_WANT
# {
#   "LastModified": "2020-08-01T10:01:16+12:00",
#   "Stop": {
#     "Name": "Lambton Quay North - Stop B",
#     "Sms": "5014",
#     "Farezone": "1",
#     "Lat": -41.2798785,
#     "Long": 174.7763096,
#     "LastModified": "2020-08-01T00:00:56+12:00"
#   },
#   "Services": [
#     {
#       "ServiceID": "1",
#       "IsRealtime": true,
#       "VehicleRef": "3965",
#       "Direction": "Outbound",
#       "OperatorRef": "TZM",
#       "OriginStopID": "7158",
#       "OriginStopName": "Island Bay-ReefSt a",
#       "DestinationStopID": "3279",
#       "DestinationStopName": "Churton Park",
#       "AimedArrival": "2020-08-01T10:04:00+12:00",
#       "AimedDeparture": "2020-08-01T10:04:00+12:00",
#       "VehicleFeature": "lowFloor",
#       "DepartureStatus": "delayed",
#       "ExpectedDeparture": "2020-08-01T10:08:02+12:00",
#       "DisplayDeparture": "2020-08-01T10:08:02+12:00",
#       "DisplayDepartureSeconds": 406,
#       "Service": {
#         "Code": "1",
#         "TrimmedCode": "1",
#         "Name": "Johnsonville West/Churton Park/Grenada Village - Island Bay",
#         "Mode": "Bus",
#         "Link": "/timetables/bus/1"
#       }
#     },
#     ... more services ...
#   ]
# }

require "json"
require "time"
require "net/http"
require "ostruct"

def main
  to_home_stops = [
    OpenStruct.new(
      name: " Nearest work",
      number: 5014, # Get your stop number from the metlink.co.nz website
      priority_buses: %w(52 58),
      ordinary_buses: %w(56 57)
    ),
    OpenStruct.new(
      name: "St. James Theatre",
      number: 5002, # Get your stop number from the metlink.co.nz website
      priority_buses: %w(52 58),
      ordinary_buses: %w(56 57)
    )
  ]
  to_town_stops = [
    OpenStruct.new(
      name: "Newlands Road/Black Rock Road",
      number: 3546, # Get your stop number from the metlink.co.nz website
      priority_buses: %w(52 58),
      ordinary_buses: %w(56 57)
    ),
    OpenStruct.new(
      name: "Glanmire Road/Truville Cr",
      number: 3772, # Get your stop number from the metlink.co.nz website
      priority_buses: %w(52 58),
      ordinary_buses: %w(56 57)
    )
  ]

  case ARGV.first
  when "home"
    to_home_stops.each { |stop| process(stop) }
  when "town", "work"
    to_town_stops.each { |stop| process(stop) }
  else
    puts "Ideally you provide an option: home|town|work"
    puts "Defaulting to option: 'home'"
    to_home_stops.each { |stop| process(stop) }
  end
end

def process(stop)
  num_results = 60
  uri = URI("https://www.metlink.org.nz/api/v1/StopDepartures/#{stop.number}/#{num_results}")
  raw_response = Net::HTTP.get(uri)
  response = JSON.parse(raw_response)
  all_buses = response.fetch("Services")

  puts "\n"
  puts "****************************"
  puts "#{stop.name} (#{stop.number})"
  puts ""
  all_buses
    .select { |bus| stop.priority_buses.include? bus.fetch("ServiceID") }
    .each { |bus| output(bus) }

  puts "----"

  all_buses
    .select { |bus| stop.ordinary_buses.include? bus.fetch("ServiceID") }
    .each { |bus| output(bus) }
end


def output(bus)
  bus_number = bus.fetch("ServiceID")
  departure = Time.parse(bus.fetch("DisplayDeparture"))
  formatted_departure = departure.strftime("%H:%M")

  departure_secs = bus.fetch("DisplayDepartureSeconds")
  hours = departure_secs / (60 * 60)
  secs_not_in_hours = departure_secs % (60 * 60)
  mins = secs_not_in_hours / 60
  secs = secs_not_in_hours % 60

  duration = "( "
  duration << "#{hours}h " if hours > 0
  duration << "#{mins}m " if mins > 0
  duration << "#{secs}s " if hours == 0 && mins == 0
  duration << ")"

  puts "#{bus_number} leaves at #{formatted_departure} #{duration}"
end

main
