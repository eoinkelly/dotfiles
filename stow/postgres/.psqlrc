-- -- vi: ft=sql

-- turn on quiet mode so that the changes this file makes won't be echoed
\set QUIET 1
\set ECHO none

--
-- -- stuff from TAOP
-- \set PROMPT1 '%n@%/%R%# %x '
--
\x auto

\set ON_ERROR_STOP on
\set ON_ERROR_ROLLBACK interactive

\pset null 'Â¤'
-- -- \pset linestyle 'unicode'
--
-- -- \pset unicode_border_linestyle single
-- -- \pset unicode_column_linestyle single
-- -- \pset unicode_header_linestyle double
--
-- set intervalstyle to 'postgres_verbose';
--
-- \setenv LESS '-iMFXSx4R'
--
-- -- stuff I had already
--
-- -- dump the SQL generated by built-in commands like \l, \d etc.
-- -- \set ECHO_HIDDEN 'on'
--
-- \timing
--
-- \set VERBOSITY verbose
-- \set HISTFILE ~/.psql_history- :DBNAME
\set HISTCONTROL ignoredups
--
\set COMP_KEYWORD_CASE upper

-- define a shortcut for getting counts
-- DROP FUNCTION IF EXISTS e_count;
-- CREATE OR REPLACE FUNCTION e_count(tbl_name text)
-- 	RETURNS bigint
-- 	LANGUAGE plpgsql
-- 	AS
-- 	$$
-- 		declare
-- 			row_count bigint;
-- 		begin
-- 			execute 'select count(*) from ' || quote_ident(tbl_name) into row_count;
-- 			return row_count;
-- 		end;
-- 	$$;

\unset QUIET
\set ECHO all

