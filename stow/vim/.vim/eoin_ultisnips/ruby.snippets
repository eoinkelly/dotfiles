# set higher priority so we override built-in snippets with same shortcut
priority 1

# options:
# b = only match if trigger is first thing on line
snippet memdump "Dump ruby process memory usage" b
puts format("%d MB", (\`ps -o rss= -p#{Process.pid}\`.to_i / 1024))$0
endsnippet

snippet it "rspec it" b
it "$1" do
  $2
end$0
endsnippet

snippet cont "rspec context" b
context "$1" do
  $2
end$0
endsnippet

snippet init "initialize" b
def initialize$1
  $2
end$0
endsnippet

snippet desc "rspec describe" b
describe "$1" do
  $2
end$0
endsnippet

snippet letb "let with do end" b
let(:$1) do
  $2
end
endsnippet

snippet let!b "let! with do end" b
let!(:$1) do
  $2
end
endsnippet

snippet bef "before each with brackets" b
before(:each$1) do
  $2
end
endsnippet

snippet rubocop "rubcop:disable shortcut" b
# rubocop:disable Metrics/$1
endsnippet

snippet spec "rspec skeleton" b
require "$1_helper"

RSpec.describe $2 do
  $3
end$0
endsnippet
